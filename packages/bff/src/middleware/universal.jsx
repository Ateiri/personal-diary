/* eslint-disable import/no-dynamic-require, global-require */

import React from 'react';
import { renderToString } from 'react-dom/server';
import { StaticRouter } from 'react-router';

import { renderApp } from '@pd/front/src';

/**
 * @typedef {import('express').Express} Express
 * @typedef {import('express').RequestHandler} RequestHandler
 * @typedef {import('@pd/front/src').FrontConfig} FrontConfig
 */

/**
 * @typedef {Object} UniversalMiddlewareProps
 * @property {string} manifestPath Path to manifest generated by webpack.
 * @property {FrontConfig} frontConfig Front global configuration.
 */

/**
 * Universal Express middleware.
 *
 * @param {UniversalMiddlewareProps} props Props.
 * @returns {RequestHandler}
 */
export const univeralMiddleware = ({ manifestPath, frontConfig }) => (req, res) => {
  const manifest = require(manifestPath);
  const extendedFrontConfig = { ...frontConfig };
  const scriptPaths = ['app.js', 'vendor.app.js', 'styles.js']
    .map(name => manifest[name])
    .filter(Boolean);
  const linkPaths = ['styles.css'].map(name => manifest[name]).filter(Boolean);
  const staticContext = {};

  // Override user authorization status.
  if (req.user) {
    extendedFrontConfig.isLogged = true;
  }

  const html = renderToString(
    <StaticRouter location={req.url} context={staticContext}>
      {renderApp(extendedFrontConfig)}
    </StaticRouter>
  );

  res.set('Content-Type', 'text/html');
  res.send(`
  <!doctype html>
  <html lang="en">
    <head>
    <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" />
      ${linkPaths
    .map(path => `<link href="/${path}" rel="stylesheet" type="text/css" />`)
    .join('\n')}
      <script type="text/javascript">window._config=${JSON.stringify(extendedFrontConfig)}</script>
      ${scriptPaths.map(path => `<script src="/${path}"></script>`).join('\n')}
      <title>hola world</title>
    </head>
    <body>
      <div id="app">${html}</div>
    </body>
  </html>
`);
};
